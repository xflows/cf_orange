[
  {
    "fields": {
      "wsdl": "",
      "has_progress_bar": false,
      "windows_queue": false,
      "order": 9,
      "name": "Rule Induction",
      "interaction_view": "",
      "post_interact_action": "",
      "visualization_view": "",
      "category": "d0e46009-46b3-43ed-bff0-5fc986ff6b34",
      "image": "images/orange-Rule-Learner.png",
      "action": "orange_rules",
      "uid": "0ce778a2-b40c-45f1-8383-9327b18fc661",
      "streaming_visualization_view": "",
      "treeview_image": "treeview/orange-Rule-Learner.png",
      "always_save_results": false,
      "is_streaming": false,
      "wsdl_method": "",
      "package": "cf_orange",
      "description": "A base rule induction learner. The algorithm follows separate-and-conquer strategy, which has its origins in the AQ family of algorithms (Fuernkranz J.; Separate-and-Conquer Rule Learning, Artificial Intelligence Review 13, 3-54, 1999). Such algorithms search for the optimal rule for the current training set, remove the covered training instances (separate) and repeat the process (conquer) on the remaining data.",
      "interactive": false,
      "static_image": "orange-Rule-Learner.png"
    },
    "model": "workflows.abstractwidget"
  },
  {
    "fields": {
      "widget": "0ce778a2-b40c-45f1-8383-9327b18fc661",
      "uid": "20a9db03-d944-4ba4-9786-d2c8dd688e87",
      "short_name": "lrn",
      "description": "Rule Learner algorithm.",
      "variable": "rulesout",
      "order": 1,
      "name": "Rule Learner"
    },
    "model": "workflows.abstractoutput"
  }
]